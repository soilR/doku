[["diverses.html", "15.4 Diverses", " 15.4 Diverses Der Beitrag wurde das letzte mal am 26 August, 2021 editiert 15.4.1 Entfernen aller packages Falls es beim arbeiten mit R und den dazugehoerigen packages zu Problemen kommt hilft der folgende Befehl diese zu loeschen: R bloggers # create a list of all installed packages ip &lt;- as.data.frame(installed.packages()) head(ip) # if you use MRO, make sure that no packages in this library will be removed ip &lt;- subset(ip, !grepl(&quot;MRO&quot;, ip$LibPath)) # we don&#39;t want to remove base or recommended packages either\\ ip &lt;- ip[!(ip[,&quot;Priority&quot;] %in% c(&quot;base&quot;, &quot;recommended&quot;)),] # determine the library where the packages are installed path.lib &lt;- unique(ip$LibPath) # create a vector with all the names of the packages you want to remove pkgs.to.remove &lt;- ip[,1] head(pkgs.to.remove) # remove the packages sapply(pkgs.to.remove, remove.packages, lib = path.lib) 15.4.2 Shortcuts Was wäre das Leben ohne shortcuts. Für viele Anwendungen spart es wahnsinnig viel Zeit. Informationen koennen auf der RStudio Homepage gefunden werden oder direkt unter Tools -&gt; Keyboard shortcuts help.  Der shortcut für die shortcuts lautet Alt + shift + K "],["faqs.html", "15.5 FAQs", " 15.5 FAQs 15.5.1 Kalender erstellen  https://r-coder.com/calendar-plot-r/ Als erstes laden wir das calendR package: # Load the package library(calendR) # Display the current year calendR() # Specifiy the year you prefer calendR(year = 2020) # start with monday calendR(year = 2021, start = &quot;M&quot;) # change the language compared with the operating system Sys.setlocale(&quot;LC_ALL&quot;, &quot;English&quot;) ## [1] &quot;LC_COLLATE=English_United States.1252;LC_CTYPE=English_United States.1252;LC_MONETARY=English_United States.1252;LC_NUMERIC=C;LC_TIME=English_United States.1252&quot; calendR(year = 2021, start = &quot;M&quot;, special.days = c(9, 21,300, 365), special.col = &quot;lightblue&quot; ) # highlight all the weekends calendR(year = 2021, start = &quot;M&quot;, special.days = &quot;weekend&quot;) # Color all weekends 15.5.2 RStudio  https://community.rstudio.com/t/plots-not-showing-up-in-the-plots-pane-in-rstudio/3981/5 Falls die Plots nicht in im plots Fenster oder im Viewer der RStudio Benutzeroberfläche angezeigt werden, sondern aussschließlich unter dem code chunk, dann müssen die folgenden Einstellungen gesetzt werden: Figure 15.1: Lage Standort Speicherkoog 15.5.3 Datenmanipulation 15.5.3.1 Create decadal data Ein schneller Schritt eine Spalte pro Dekade zu erstellen geht folgendermaßen: # Example with the gapminder data gapminder %&gt;% select(year, country, pop) %&gt;% head(n = 5) ## # A tibble: 5 x 3 ## year country pop ## &lt;int&gt; &lt;fct&gt; &lt;int&gt; ## 1 1952 Afghanistan 8425333 ## 2 1957 Afghanistan 9240934 ## 3 1962 Afghanistan 10267083 ## 4 1967 Afghanistan 11537966 ## 5 1972 Afghanistan 13079460 # Use floor() and round to the nearest border gapminder %&gt;% mutate( decade = floor(year / 10), decade = decade * 10, decade = factor(decade) ) %&gt;% select(year, decade, country, pop) %&gt;% head(n = 5) ## # A tibble: 5 x 4 ## year decade country pop ## &lt;int&gt; &lt;fct&gt; &lt;fct&gt; &lt;int&gt; ## 1 1952 1950 Afghanistan 8425333 ## 2 1957 1950 Afghanistan 9240934 ## 3 1962 1960 Afghanistan 10267083 ## 4 1967 1960 Afghanistan 11537966 ## 5 1972 1970 Afghanistan 13079460 15.5.3.2 String manipulation  http://www.endmemo.com/r/gsub.php  https://bookdown.org/rdpeng/rprogdatascience/r-nuts-and-bolts.html#summary Die wichtigsten R Funktionen um Strings zu bearbeiten sind: grep() und grepl(): Sucht nach einem regulären Ausdruck in einem String regexpr(), gregexpr() und regexec(): Sucht nach Treffern in einem regulären Ausdruck und geben die Indizes wieder, wo der Treffer auftrifft. sub() und gsub(): Sucht nach einem regulären Ausdruck in einem String und ersetzt diesen Das Muster ist dabei pattern - replacement: gsub(pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE) x &lt;- &quot;Eine tolle Exursion&quot; gsub(&quot;Eine tolle&quot;, &quot;Die weltbeste&quot;, x) ## [1] &quot;Die weltbeste Exursion&quot; 15.5.3.3 Split a single column into multiple columns  https://cmdlinetips.com/2018/03/how-to-split-text-in-a-column-in-data-frame-in-r/ Beim Anlegen von Variablennamen kann man Informationen in dem jeweiligen Namen bereits hinterlegen. Zum Beispiel die Codierung 01_10_st kann vom Standort 01 in 10 cm Tiefe der Parameter Bodentemperatur sein. Möchte ich diese Spalteninformationen nun auf mehrer Spalten Verteilen eignet sich die Funktion separate. x &lt;- tibble( id = &quot;01_10_st&quot;, value = 10.3 ) x ## # A tibble: 1 x 2 ## id value ## &lt;chr&gt; &lt;dbl&gt; ## 1 01_10_st 10.3 # Create new columns with the information from the id column y &lt;- x %&gt;% separate(id, into = c(&quot;study_site&quot;, &quot;depth&quot;, &quot;parameter&quot;)) y ## # A tibble: 1 x 4 ## study_site depth parameter value ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 01 10 st 10.3 Aber Achtung. R ist auch hier Anfällig gegenüber Groß- Kleinschreibung. x &lt;- &quot;Eine tolle Exursion&quot; gsub(&quot;Eine Tolle&quot;, &quot;Die weltbeste&quot;, x) ## [1] &quot;Eine tolle Exursion&quot; Ich kann aber auch das Argument setzen, dass Kleinschreibung egal ist mit: x &lt;- &quot;Eine tolle Exursion&quot; gsub(&quot;Eine Tolle&quot;, &quot;Die weltbeste&quot;, x, ignore.case = T) ## [1] &quot;Die weltbeste Exursion&quot; "],["visualisation.html", "15.6 Visualisation", " 15.6 Visualisation 15.6.1 Superscripts and subscripts Um Zahlen an Plot labels hoch- oder tiefzustellen, bspw. Achsenbeschriftung oder Titel, kann man die Befehlen èxpressionundpaste` verwenden. Expression ermöglicht die Verwendung von Sonderzeichen und paste ermöglicht die Sonderzeichen mit normalem Text zu verknüpfen. # Erstelle willkürlich Daten a mit vier Gruppen in b x &lt;- tibble( a = rnorm(n = 100, mean = 50, sd = 2), b = rep(x = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;), 25) ) x %&gt;% ggplot(aes(a, b, group = b)) + geom_boxplot() # [] Tiefstellen x %&gt;% ggplot(aes(a, b, group = b)) + geom_boxplot() + labs( title = &quot;Eine tolle Überschrift&quot;, x = &quot;Einheit (XY)&quot;, y = expression(E[H]) ) # ^ Hochstellen x %&gt;% ggplot(aes(a, b, group = b)) + geom_boxplot() + labs( title = &quot;Eine tolle Überschrift&quot;, x = &quot;Einheit (XY)&quot;, y = expression(m^2) ) # Kombination + normaler Text x %&gt;% ggplot(aes(a, b, group = b)) + geom_boxplot() + labs( title = &quot;Eine tolle Überschrift&quot;, x = &quot;Einheit (XY)&quot;, y = expression(paste(&quot;Ca&quot; ^&quot;2+&quot;, &quot; Verteilung (g &quot;, cm^-3, &quot;)&quot;)) ) # Bei langen Beschriftungen eignen sich auch Zeilenumbrüche, die mit &quot;\\n&quot; erzeugt werden x %&gt;% ggplot(aes(a, b, group = b)) + geom_boxplot() + labs( title = &quot;Eine tolle \\nÜberschrift&quot;, x = &quot;Einheit (XY)&quot;, y = expression(paste(&quot;Ca&quot; ^&quot;2+&quot;, &quot; Verteilung (g &quot;, cm^-3, &quot;)&quot;)) ) 15.6.2 Modifying labels in faceted plots  https://biostats.w.uib.no/modifying-labels-in-faceted-plots/ Figure 15.2: @Henry Wang taken from: https://henrywang.nl/ggplot2-theme-elements-demonstration/ # Darstellung des gesamten Zeitraums koog_day %&gt;% filter(year &gt; &quot;2010&quot; &amp; year &lt; &quot;2013&quot;) %&gt;% ggplot(aes(daily, st10)) + geom_line() # Darstellen pro Jahr p &lt;- koog_day %&gt;% filter(year &gt; &quot;2010&quot; &amp; year &lt; &quot;2013&quot;) %&gt;% ggplot(aes(daily, st10)) + geom_line() + facet_wrap(~year, scales = &quot;free_x&quot;) p Ändern der Hintegrundfarbe p + theme(strip.background = element_rect(fill=&quot;lightblue&quot;, size=1, color=&quot;darkblue&quot;)) Ändern der Schriftfarbe p + theme(strip.text.x = element_text(size=12, face=&quot;italic&quot;, color=&quot;darkblue&quot;)) Ändern der Beschriftung ist nicht ganz unkompliziert, da die Beschriftung von den Variablennamen der Spalten genommen wird. Möglichkeit 1 wäre, die Beschriftung im Datensatz direkt zu ändern. Möglichkeit zwei ist einen neuen Namensvektor zu erstellen und die Funktion labeller = labeller() zu verwenden. # Erstelle Namensvektor new_name &lt;- c(&quot;2011&quot; = &quot;Gute Zeiten&quot;, &quot;2012&quot; = &quot;Schlechte Zeiten&quot;) # Nutze die Funktion labeller koog_day %&gt;% filter(year &gt; &quot;2010&quot; &amp; year &lt; &quot;2013&quot;) %&gt;% ggplot(aes(daily, st10)) + geom_line() + facet_wrap(~year, scales = &quot;free_x&quot;, labeller = labeller(year = new_name)) Auch der Abstand zwischen den Panels kann verändert werden mit theme(panel.spacing = unit()). # Hm....es gibt immer noch einen overlap bei der X-Achse p + theme(panel.spacing.x = unit(.25, &quot;cm&quot;)) # JA :) Besser p + theme(panel.spacing.x = unit(1.25, &quot;cm&quot;)) "],["glossary.html", "15.7 Glossary", " 15.7 Glossary Shell In der Informatik wird als Shell die Software bezeichnet, mittels derer ein Benutzer mit einem Betriebssystem interagiert  eine Mensch-Maschine-Schnittstelle. Während Kernel den Kern eines Betriebssystems bezeichnet, ist die Shell (englisch für Schale, Hülle oder Außenhaut) anschaulich dessen Außenschicht und damit Schnittstelle (englisch Interface) zum Benutzer. Synonym = terminal, command line, and console GUI Grafische Benutzeroberfläche oder auch grafische Benutzerschnittstelle oder Bedienoberfläche (Abk. GUI von englisch graphical user interface) bezeichnet eine Form von Benutzerschnittstelle eines Computers. Sie hat die Aufgabe, Anwendungssoftware auf einem Rechner mittels grafischer Symbole, Steuerelemente oder auch Widgets genannt, bedienbar zu machen. Clipboard Ein Clipboard ist der englischsprachige Begriff für eine Zwischenablage in der elektronischen Datenverarbeitung, d. h. ein virtueller Zwischenspeicher "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
